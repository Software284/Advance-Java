RowSets:->
-> it is alternative to ResultSet.
-> we can use RowSet to handle a group of records in more effective way than ResultSet.
-> RowSet interface present in javax.sql package.
-> RowSets is child interface of ResultSet.
-> RowSet implementations will be provided by java vendor and database vendor.
-> by default RowSet is scrollable and updatable.
-> By default RowSet is serializable and hence we can send RowSet object across the network.but
ResultSet object is not serializable.
-> ResultSet is connected i.e to use ResultSet compulsary database Connection must be required.
-> RowSet is disconnected. i.e to use RowSet database connection is not required.


TYpes of RowSets:->
-> There are two types of Rowsets
i. Connected RowSets
ii. Disconnected RowSets

Connected RowSets:->
-> Connected RowSets are just like ResultSets.
-> To access RowSet data compulsary connection should be available to database.
-> we cannot serialize connected rowsets
eg: JdbcRowSets

Disconnected RowSets:->
-> Without having connection to the database we can access RowSet data.
-> We can serialize Disconnected RowSets.
-> Eg: CachedRowSet,WebRowSet,FilteredRowSet,JoinRowSet

Diagaram:->
									ResultSet(I)
									    |
									RowSet(I)
									    |
								-----------------
								|				|
								JDBC RowSet    CachedRowSet
								                    |
								               WebRowSet(I)
								                    |
								               ----------------
								               | 			   |
								               JoinRowSet(I)     FilteredRowSet(I)
								     

How to create RowSet Object:-> we can create different types of rowset object as follows
RowSetFactory rsf = RowSetProvider.newFactory();
JdbcRowSet jrs = rsf.createJdbcRowSet();
CachedRowSet crs = rsf.createCachedRowSet();
WebRowSet wrs = rsf.createWebRowSet();
JoinRowSet jnrs = rsf.createJoinRowSet();
FilteredRowSet frs = rsf.createFilteredRowSet();


CachedRowSet:->
-> it is the child interface of RowSet.
-> it is bydefault scrollable and updatable.
-> it is disconnected RowSet. i.e we can use RowSet without having database connection.
-> it is serializable
-> the main advantage of CachedRowSet is we can send this RowSet object for multiple 
people across the network and all those people can access RowSet data without having DB
connection.
-> if we perform any update operation(like insert,delete and update) to the CachedRowSet
to reflect those changes compulsary Connection should be established.
-> once connection established then only those changes will be reflected in database.


WebRowSet(I):->
-> it is the child interface of CachedRowSet.
-> it is bydefault scrollable and updatable.
-> it is disconnected and serializable.
-> WebRowSet can publicsh data to xml files,which are very useful for enterprise applications.
FileWriter fw = new FileWriter("emp.xml");
rs.writeXml(fw);
-> we can read xml data into RowSet as follows


JoinRowSet:->
-> it is the child interface of WebRowSet.
-> it is by default scrollable and updatable.
-> it is disconnected and serializable.
-> if we want ot join rows from different rowsets into a single rowset based on matched
column(common column) then we should go for JoinRowSet.
-> we can add RowSets to the JoinRowSet by using addRowSet() method.
addRowSet(RowSet rs,int commonColumnIndex);


Row Id Interface:->
-> Present in java.sql.package.
-> introduced in JDBC 4.0
-> For every row Database engine will associate a unique id, which is nothing but RowId.
-> Internally RowId represents logical address of the row.
-> whenever we are inserting rows automatically database engine will generate RowId for
each row and programmer is not responsible to provide.
-> database engine will use RowId internally to Retrieve Data.
-> The main advantage of RowId is Fast Retrieval of data.


RowIdLifetime:->
-> it is an enum present in java.sq. package
-> RowIdLifetime represent the life time of generated RowIds
-> The possible values for RowIdLifetime are
 
i. ROWID_UNSUPPORTED:-> indicates that DB won't provide support for RowIds
ii.ROWID_VALID_FOREVER:-> indicates that life time is forever and unlimited
iii. ROWID_VALID_SESSION:-> indicates that rowid applicable only for current session.
iv. ROWID_VALID_TRANSACTION:-> indicates that rowid is valid only for current session

Note:-> For oracle database it is ROWID_VALID_FOREVER
But for MySql database it is ROWID_UNSUPPORTED

DatabaseMetaData dbms = con.getMetaData();
System.out.println(dbms.getRowIdLifeTime());







